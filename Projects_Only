STEELCASE PROJECT EXPLANATION IN REAL-TIME:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📘 Project Description:

👉 Steelcase is one of the oldest and largest furniture manufacturers in the USA, 
   specializing in the design, production, and distribution of integrated office furniture, architectural solutions, and workplace technologies. 
👉 Their clientele spans across office, education, healthcare, and retail sectors.

👉 As a Power Apps Developer, I was responsible for designing and implementing business applications to automate internal operations and streamline workflows.

🔧 Key Responsibilities & Highlights:
---------------------------------------
👉 Developed Canvas Apps for internal teams including:

1. Inventory Management App    – to track furniture stock and optimize asset availability across warehouses.
2. Purchase Order Tracking App – enabled procurement teams to monitor vendor orders and delivery timelines.

👉 Integrated SharePoint Online lists and SQL Server as data sources for real-time data operations.

👉 Used Power Automate to build automated workflows for:
✅ Approval processes and sending Notifications

👉 Designed responsive and role-based UIs tailored to department-specific needs.

👉 Applied patch functions, collections, and delegation techniques to improve performance and scalability.

👉 Ensured data security using SharePoint permissions and Power Apps role-based access control.
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ App 1: Inventory Management App – Responsive Canvas App:
👉 In the Inventory Management App for Steelcase, we mainly tracked Steelcase’s office furniture products:
👉 For example:
Office Chairs – ergonomic chairs, task chairs, lounge seating
Desks – adjustable desks, fixed desks, collaborative tables
Storage Units – cabinets, mobile pedestals, lockers
Partitions & Panels – modular partitions for open spaces
Accessories – monitor arms, power modules, whiteboards
Spare Parts – chair wheels, desk legs, and other replaceable components

🎯 Purpose: "I developed a responsive Inventory Management App using Canvas App to help a client manage furniture stock across multiple warehouses."

🔧 Key Highlights:
📱 Responsive Design: Built using containers and relative positioning to auto-adjust across all devices desktop, tablet, and mobile.

🔧 Data Source: Used a SharePoint List named Inventory.
🗂️ Key columns included: 
ProductID (Text), 
ProductName (Text), 
Category (Choice: Chairs, Desks, Storage, Partitions, Accessories, Spare Parts), 
Quantity (Whole Number), 
WarehouseLocation (Choice).


🛠️ Canvas App Features I Built:
🏠 Home Screen:
– Gallery to display inventory Products, I customized each gallery item layouts.
– Added a Search box to find products by name.
– Add a Dropdowns to Filter() to allow users to filter by Category and Location.

➕ Add Item Screen:
– Added a “+” icon that opens a form for users to add new products.
– Used SubmitForm() to save data into SharePoint.

ℹ️ Item Details Screen:
– On selecting a gallery item, → Navigate to a screen to display full item details (eg., Product name, Quantity, Category, Location).
– They can view all details in read-only mode.
– I enabled editing using EditForm control for authorized users.

🔴 Low Stock Alerts:
– I also added a Low Stock Warning — if Quantity < 5, it shows a red icon to alert users.

5️⃣ Warehouse View:
– Used GroupBy() to group inventory by warehouse
– Displayed total quantity per warehouse for better planning.


📈 Finally Impact:
------------------
🎯 Replaced manual tracking:
— Earlier they were tracking inventory manually in Excel, manual methods to track inventory,
— now with the canvas app, all records are digital, stored in SharePoint, and easily accessible.

🎯 Reduced errors:
— Since the app uses structured forms with validation and direct integration with SharePoint.
— it reduced Manual data entry mistakes like duplicate items, wrong quantities, or missing fields.

🎯 Improved Warehouse visibility:
— Warehouse staff can now quickly search or filter stock based on category or location and see accurate, real-time availability
— something not possible with manual tracking

🎯 Saved time:
— With this app, the team saved a lot of time — they no longer had to search through Excel or call each location. 
— Everything was centralized and quick to update or access.
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ App 2: Order Tracking App – Model-Driven App
🎯 Purpose:
"I developed a Model-Driven Order Tracking App to help the procurement team track vendor purchase orders, monitor delivery timelines, 
 and manage approval workflows using structured Dataverse tables."

🔧 Key Highlights:
🧱 Model-Driven Design:
– Built using Dataverse tables, forms, views, dashboards
– UI auto-generated and responsive by default
– Navigation customized using the App Designer with a custom Site Map

🔧 Data Source:
– Used a Dataverse Table named PurchaseOrders
🗂️ Key columns included: 
PO_ID (Text),
VendorName (Text),
ItemName (Text),
Quantity (Whole Number),
Status (Choice: Pending, Approved, In Transit, Delivered),
ExpectedDeliveryDate (Date),
CreatedBy (Lookup: SystemUser).

🛠️ Model-Driven App Features I Built:
🏠 Dashboard View:
– A real-time dashboard with charts showing:
  Total POs by status
  Vendor-wise open POs
– Gives managers a quick overview of pending and delivered orders

📄 Main Form – PO Entry & Updates:
– Created a custom Main Form for users to add or update orders
– Used Business Rules to:
 Show “Approval” button only if status is “Received”
 Make ExpectedDeliveryDate required if status ≠ “Pending”

🔍 Custom Views:
– Built views like:
 All Orders
 Pending Orders
 Delivered Orders
– Added filters and sorted by delivery date for easy tracking

🔁 Approval Workflow:
– Integrated with Power Automate:
 Triggered email when PO is approved
 Updated status based on external response

🔐 Security Roles:
– Configured role-based access:
 Procurement Managers can approve orders
 Purchase Agents can only create/edit but not approve

📈 Final Impact:
🎯 Replaced manual order tracking:
— Earlier, POs were tracked using Excel and email threads
— Now, everything is centralized in Dataverse with auto-recording

🎯 Improved vendor communication:
— Vendors get real-time email notifications with PO details
— Delivery status is always up to date

🎯 Enhanced tracking and planning:
— Managers can see pending, delayed, or approved orders instantly
— Helps with better purchase planning and forecasting

🎯 Reduced approval delays:
— With built-in workflows and permissions, approvals are faster
— No need to chase via email
