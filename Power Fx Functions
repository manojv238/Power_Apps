1. PATCH() Function:
━━━━━━━━━━━━━━━━━━━━
👉 The PATCH() Function in Power Apps is used to create, update or modify records in a data source.
✅ For example:
👉 If i only want to update the Specific fields of a record without affecting any other data, that time it will help to me.

🔍 Explanation: You want to UPDATE the age of the employee whose ID = 3 to Age = 35:
➡️ Patch(Employees, LookUp(Employees, ID = 3), {Age: 35})
--------------------------------------------------------------------------------------------------------------------------------------

2. LOOKUP() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The LookUp() function is used to search a data source and return a single record (or a single value) that matches a condition.
✅ For example:
👉 Find the record of the employee whose ID is 3:
➡️ LookUp(Employees, ID = 3) ---> This returns the entire record for the employee with ID = 3.
--------------------------------------------------------------------------------------------------------------------------------------

3. FILTER() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The Filter() function is used to retrieves specific records from a data source based on certain conditions.
✅ Example:
👉 If i want to get all employees who work in the IT department:
➡️ Filter(Employees, Department = "IT") ---> This will return all records where the Department field is "IT".
--------------------------------------------------------------------------------------------------------------------------------------

4. SEARCH() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The Search() function is used to search for text within a specific column of a data source and we get the matching results.
👉 The Search() function is "Case-Insensitive", it doesn't matter whether the text you are searching for is upper or lower case.
✅ Example:
👉 To search for employees whose Name contains the text "John":
➡️ Search(Employees, "John", "Name") ---> This will return all records where the Name column contains the word "John"/"JOHN".
--------------------------------------------------------------------------------------------------------------------------------------

5. SORT() Function:
━━━━━━━━━━━━━━━━━━━
👉 The Sort() function is used to sort records in a data source based on a specific column or fields.
👉 We can sort the data in either ascending or descending order.
✅ Example:
👉 If i want to sort employees by their Age in ascending order (smallest to largest):
➡️ Sort(Employees, Age, Ascending) ---> This will sort the Employees list so that the employees with the youngest age appear first.
--------------------------------------------------------------------------------------------------------------------------------------

6. IsMatch() Function:
━━━━━━━━━━━━━━━━━━━━━━
👉 The IsMatch() function is used to check whether a text string matches a specific pattern.
👉 It is usually defined by a regular expression (RegEx).
👉 It returns true or false, making it useful for validating user inputs like: Email addresses, Phone numbers, PIN codes, Password formats.
✅ Example:
👉 In a login form, I used IsMatch() Function to check if the email input matched the correct pattern before allowing submission.
--------------------------------------------------------------------------------------------------------------------------------------------

7. Match() Function:
━━━━━━━━━━━━━━━━━━━━
👉 The Match() function is used to find and return the first match of a pattern (regular expression) within a text string.
👉 It is similar to IsMatch(), but instead of returning true/false. but, match() function it returns the actual matched value.
✅ Example:
👉 If I have a log message or input string, and I need to pull out the first number, email, or keyword — I use Match().
--------------------------------------------------------------------------------------------------------------------------------------------

8. MatchAll() Function:
━━━━━━━━━━━━━━━━━━━━━━━
👉 The MatchAll() function is used to find all occurrences of a pattern in a text string. It returns a table of all matches.
✅ Example:
👉 If I need to extract all email addresses or numbers from a long message, I use MatchAll() returns them as a table of matches.
--------------------------------------------------------------------------------------------------------------------------------------------

9. Switch() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The Switch() is used when i want to compare one value against multiple possible Matches and return a different result for each Match.
👉 It’s cleaner than nesting multiple If() statements. 
✅ Example: 
👉 Show Message Based on User Role:
Switch(
   UserRole.Text,
   "Admin", "Welcome Admin!",
   "Manager", "Welcome Manager!",
   "Employee", "Welcome Employee!",
   "Role not recognized"
)
👉 If the UserRole is "Manager", it will return "Welcome Manager!".
--------------------------------------------------------------------------------------------------------------------------------------------

7. Differnce between ComboBox AND DropDown Controls?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✅ DropDown Control: 
👉 DropDown control lets users select a single value from a list of predefined options.
👉 It’s simple and ideal when the choices are few and selection is limited to one.

✅ ComboBox Control:
👉 ComboBox control allows users to select single or multiple values, and also supports searching/filtering through the options.
👉 It is more flexible and interactive than a DropDown.
--------------------------------------------------------------------------------------------------------------------------------------

8. SharePoint in Power Apps?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━━
👉 SharePoint is a Microsoft web-based collaboration platform that helps organizations securely store data and share information from anywhere.
👉 It acts as a centralized backend for managing documents, lists, and other data, and integrates easily with Power Apps.
👉 Using SharePoint as a data source, we can quickly build business apps with seamless data connectivity and secure data management.

👉 I connected Power Apps to SharePoint lists using standard connectors to view, edit, and submit data.










