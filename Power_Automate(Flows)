POWER AUTOMATE INTERVIEW PREPARATION QUESTIONS AND ANSWERS :-
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. What is Power Automate?

2. What are the different types of flows in Power Automate?

3. What are Triggers and Actions in Power Automate?

4. What is the purpose of Conditions in Power Automate?

5. What is Parallel branching in Power Automate?

6. What is a Scope in Power Automate?

7. How can you handle Errors in Power Automate flows?

8. What are Expressions in Power Automate?

9. Describe a flow you have built end-to-end: Have you used approval flows? How did you implement them?

10. What is Concurrency Control in Power Automate?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. What is Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 Power Automate is a cloud-based service by Microsoft designed to automate repetitive tasks and processes.
👉 It allows users to create automate workflows that connect with various apps and services.
👉 With Power Automate, Users can automate tasks like sending notifications, managing approval processes, syncing files without needed advanced coding skills.
------------------------------------------------------------------------------------------------------------------------------------------------------------

2. What are the different types of flows in Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
Power Automate supports five main types of flows:

🔹 1. Automated Flow:
👉 Triggered automatically by specific event or condition.
👉 For Example, when a new item is added to a SharePoint list, an email is received, or a file is created in OneDrive.

🔹 2. Instant Flow (Button Flow):
👉 Manually triggered by users, typically through a button press. (in Power Apps or the Power Automate mobile app).
👉 It allows users to start actions on demand, such as sending approvals, sending notifications.

🔹 3. Scheduled Flow:
👉 Runs on a define schedule — (e.g., daily, weekly, hourly) — to automate repetitive tasks.
👉 For Example, Automatically generate and email a report every Monday at 9 AM.

🔹 4. Business Process Flow (BPF):
👉 Used in Model-Driven Apps to guide users through a multi-step business process.

🔹 5. Desktop Flow (RPA):
👉 Used for Robotic Process Automation(RPA) to automate manual tasks on desktop (e.g., legacy systems).
----------------------------------------------------------------------------------------------------------------------------------------

3. What are Trigger and Action in Power Automate?

TRIGGER:
━━━━━━━━━
👉 A Trigger is the starting point of any flow — it defines the event that initiates the workflow.
👉 I’ve used various triggers like:
— When an item is created in SharePoint
— When an email arrives in Outlook

ACTION:
━━━━━━━━━
👉 An Action is the response or task performed after the trigger runs.
👉 Examples of actions I’ve used:
— Send an approval email
— Update a SharePoint item
----------------------------------------------------------------------------------------------------------------------------------------

4. What is the purpose of Conditions in Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 Conditions in Power Automate allow flows to execute specific actions based on logic criteria.
🔹 For example:
👉 In a leave approval process, I set a condition to check if the leave days are more than 5. 
   If yes, the approval goes to the senior manager; if no, it goes to the team lead. 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. What is Parallel branching in Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 Parallel branching to run multiple actions or sets of actions at the same time within a flow.

🔹 For example, in one workflow, after a form submission, I set up parallel branches to:
👉 Send a confirmation email, Update a SharePoint list, and Notify the team in Teams.
👉 All these actions ran simultaneously, improving performance and reducing wait time compared to step-by-step execution.
---------------------------------------------------------------------------------------------------------------------------

6. What is a Scope in Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 A Scope is like a container in Power Automate that groups multiple actions together. I use it mainly for organizing flows and implementing error handling.

🔹 For example, 
👉 One of my flows, I grouped all the main actions — like creating a record, sending an email, and updating SharePoint — inside a Scope called ‘Try’.
👉 Then I added a separate ‘Catch’ Scope, which runs only if the Try Scope fails (using Configure Run After).
👉 This way, I could log the error and send a Teams alert without stopping the flow.
---------------------------------------------------------------------------------------------------------------------------------------------------------------

7. How can you handle Errors in Power Automate flows?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
🔹 I usually handle errors in Power Automate flows using:
👉 Configure Run After ---> I use this to run specific actions only when the previous one fails, is skipped, or times out.
👉 Scope with Try-Catch Pattern ---> I wrap actions in a Scope block (Try), and if anything fails, the Catch scope handles logging or sending alerts.
👉 Terminate Action ---> I use this to end a flow with a custom status (Succeeded, Failed, Cancelled).
👉 Send Notifications ---> If something goes wrong, I trigger an email or Teams message to inform the relevant team.
----------------------------------------------------------------------------------------------------------------------------------------------------------

8. What are Expressions in Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 Expressions in Power Automate are used to manipulate data and add logic inside a flow. I use them when I need more control than basic actions can provide.

👉 For example, I’ve used expressions like formatDateTime() to format dates,
👉 if() to apply conditional logic inside actions,
👉 and length() to check if a list or array has items before proceeding.
--------------------------------------------------------------------------------------------------------------------------------------------------------------

9. Describe a flow you have built end-to-end: Have you used approval flows? How did you implement them?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 Yes, I built an end-to-end leave approval workflow using Power Automate integrated with SharePoint, Outlook.

🔹 Step 1 – Trigger: 
👉 The process starts when a new leave request is submitted to a SharePoint list.

🔹 Step 2 – Flow Triggered: 
👉 A Power Automate flow is triggered automatically when a new item is created in the SharePoint list.

🔹 Step 3 – Condition Check: 
👉 I added a condition to check if the leave days are more than 5.
👉 If it's more than 5, the request goes to the senior manager for approval.
👉 Otherwise, it goes to the team lead.

🔹 Step 4 – Approval Process: 
👉 I used the Start and Wait for an Approval action. Based on the response: I updated the SharePoint item status.
👉 If approved, the SharePoint list is updated with the new status.
👉 If rejected, the flow updates the status and sends a rejection message.

🔹 Step 5 – Notifications: 
👉 The flow sends an email via Outlook and a Teams message to notify the employee about the outcome.
------------------------------------------------------------------------------------------------------------------

10. What is Concurrency Control in Power Automate?

EXPLAIN IN ANSWER:-
━━━━━━━━━━━━━━━━━━━
👉 Concurrency Control is used to manage how many flow runs happen in parallel when looping through items — especially in actions like "Apply to Each."

🔹 How I used it: In one flow, I was processing SharePoint list items and sending emails. 
👉 Initially, Power Automate ran all iterations in parallel, which caused issues — like Rate limits ⛔ and Sending emails out of order 📬.
👉 So, I turned on Concurrency Control, set the degree of parallelism to 1, and ensured that actions ran one at a time in sequence ✅




