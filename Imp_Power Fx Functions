1. PATCH() Function:
━━━━━━━━━━━━━━━━━━━━
👉 The PATCH() Function is used to create a record, update a record in a data source.
✅ Syntax: Patch(DataSource, Defaults(DataSource), { Column1: Value1, Column2: Value2, Column3: Value3 })
💛 Syntax: Patch(Employees, Defaults(Employees), { Name: "Manoj", Age: 25, Department: "IT" })

👉 If I want to update only specific fields of a record without affecting other data, Patch() is the best choice.
✅ For example: If you want to update a specific employee whose name is "John Doe":-
💛 Syntax: Patch(Employees, LookUp(Employees, Name = "Manoj"),{Age: 20, Department: "HR"})
-------------------------------------------------------------------------------------------------------------------

2. LOOKUP() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The LookUp() function is used to retrieve single record from a data source that matches a specific condition.
💛 Syntax: LookUp(DataSource, Condition [column])

✅ For example: Find the Name field only from the employee record.
➡️ LookUp(Employees, Name:"Manoj") 
--------------------------------------------------------------------------------------------------------------------

3. FILTER() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The Filter() function is used to retrieve multiple records from a data source that matches a specific condition.
💛 Syntax: Filter(DataSource, Condition)

✅ For Example: Get all employees who work in the IT department.
➡️ Filter(Employees, Department = "IT") ---> This returns all records where the Department field is "IT".
➡️ Filter(Employees, Department =Dropdown.Selected.Value) ---> Users selects the dropdown and returns that specific criteria.
➡️ If(Dropdown.Selected.Value= "All",Employess, Filter(Employees, Department=Dropdown.Selected.Value)) ---> Users selects all & returns all data.
-------------------------------------------------------------------------------------------------------------------------------------------------

4. SEARCH() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The Search() function is used to search for text within a specific column of a data source and returns all matching records.
👉 It is a "Case-Insensitive", it doesn't matter whether the text searching for upper or lower case.
💛 Syntax: Search(DataSource, SearchString, ColumnName)

✅ For Example: To search for employees whose Name contains the text "John".
➡️ Search(Employees, "John", "Name") ---> This returns all records where the Name column contains the word "John"/"JOHN".
--------------------------------------------------------------------------------------------------------------------------------------

5. SORT() Function:
━━━━━━━━━━━━━━━━━━━
👉 The Sort() function is used to sort records in a data source based on a specific column or field.
👉 We can sort the data in either ascending or descending order.
💛 Syntax: Sort(DataSource, ColumnName, SortOrder)

✅ Example: Sort employees by their Age in ascending order (youngest to oldest):
➡️ Sort(Employees, Age, Ascending) --->  This sorts the Employees list so that employees with the smallest age appear first.
--------------------------------------------------------------------------------------------------------------------------------------

6. IsMatch() Function:
━━━━━━━━━━━━━━━━━━━━━━
👉 The IsMatch() function is used to check whether a text string matches a specific pattern, usually defined by a regular expression (RegEx).
👉 It returns true or false, making it useful for validating user inputs like: Email addresses, Phone numbers, PIN codes, Password formats.
💛 Syntax: IsMatch(EmailInput.Text, pattern) 
✅ Example:
In a login form, I used IsMatch() Function to check if the email input matched the correct pattern before allowing submission.
--------------------------------------------------------------------------------------------------------------------------------------------

7. Match() Function:
━━━━━━━━━━━━━━━━━━━━
👉 The Match() function is used to find and return the first match of a pattern within a text string. (regular expression)
👉 It is similar to IsMatch(), which returns true/false, Match() returns the actual matched value found in the text.
✅ Example:
If I have a log message or input string, and I want to extract the first number, email, or keyword, I use Match().
--------------------------------------------------------------------------------------------------------------------------------------------

8. MatchAll() Function:
━━━━━━━━━━━━━━━━━━━━━━━
👉 The MatchAll() function is used to find all occurrences of a pattern within a text string.
👉 It returns a table of all matched values, not just the first one.
✅ Example:
If I need to extract all email addresses or all numbers from a long message, I use MatchAll(), It returns all matches as a table.
--------------------------------------------------------------------------------------------------------------------------------------------

9. Switch() Function:
━━━━━━━━━━━━━━━━━━━━━
👉 The Switch function is used to check one condition or one expression against multiple values.
👉 It’s cleaner and more readable than writing multiple If() statements when comparing the same variable, 
   — for example, checking different user roles or status.
💛 Syntax: Switch(expression, value1, result1, value2, result2, ..., default)

✅ Example Use Cases:
🔹 If the User selects "Manager", it will return "Welcome Manager!".
👉 Switch(Dropdown.Selected.Value, "Admin", "Welcome Admin!", "Manager", "Welcome Manager!", "Selected from the Dropdown")
                      (OR)
🔹 Change label or text colour based on the selection list box.
👉 Switch(Listbox.Selected.Value, "1",Red, "2",Green, "3",Yellow)
--------------------------------------------------------------------------------------------------------------------------------------------

10. If() Function:
━━━━━━━━━━━━━━━━━━
👉 If() function is used for multiple logical conditions like ranges or combined expressions using operators like (>, <, =, And, Or).
👉 It’s more flexible when you need to evaluate different types of conditions, not just one variable.
💛 Syntax: If(condition, result, [condition2, result2, ..., default])

✅ Example Use Cases:
🔹 Change label or text colour based on the selection list box.
👉 If(Listbox.Selected.Value = "1",Red,
    If(Listbox.Selected.Value = "2", Green,
    If(Listbox.Selected.Value = "3",Yellow))
--------------------------------------------------------------------------------------------------------------------------------------------

11. Differnce between ComboBox AND DropDown Controls?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✅ DropDown Control: 
👉 DropDown control lets users select a single value from a list of predefined options.
👉 It’s simple and ideal when the choices are few and selection is limited to one.

✅ ComboBox Control:
👉 ComboBox control allows users to select single or multiple values, and also supports searching/filtering through the options.
👉 It is more flexible and interactive than a DropDown.
--------------------------------------------------------------------------------------------------------------------------------------

12. SharePoint in Power Apps:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
👉 SharePoint is a Microsoft web-based collaboration platform.
👉 I use SharePoint as a common data source in Power Apps for storing and managing lists and documents.
👉 It acts as a centralized backend for managing documents, lists, and other data, and integrates easily with Power Apps.
👉 Using SharePoint helps deliver quick solutions without complex backend setups.











